name: Build and deploy documentation

# Controls when the action will run. Triggers the workflow on PR to main
on:
  push:
    branches:
      - main

jobs:
  build-docs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ "3.9" ]
  github-pages:
    runs-on: ubuntu-latest

    permissions:
      contents: write
    
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
      - name: Check out repository
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0 # fetch all commits/branches so that mike works
              
      #----------------------------------------------
      #          install & configure poetry
      #----------------------------------------------
      - name: Install Poetry
        run: |
          pipx install poetry
          pipx inject poetry poetry-dynamic-versioning

      # ----------------------------------------------
      #               setup python 
      # -----------------------------------------------
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.6.0
        id: setup-python
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'poetry'

      #----------------------------------------------
      #           install dependencies 
      #----------------------------------------------
      - name: Install dependencies
        run: poetry install --no-interaction --no-root --with docs --all-extras

      - name: Configure git user
        run: |
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          
      #----------------------------------------------
      #           generate markdown files
      #----------------------------------------------
      - name: Generate markdown docs from schema
        run: make gen-doc

      #----------------------------------------------
      #           deploy documentation
      #----------------------------------------------
      - name: Deploy generated docs
        run: |
          # generate HTML from markdown and put into dev version
          poetry run mike deploy dev
          
          # switch to gh-pages branch, copy over the latest 404.html from main
          git checkout --force gh-pages
          git checkout --force main -- 404.html
          git commit -m "Add 404.html to root" || echo "No changes to 404.html to commit"
          
          # push changes to gh-page branch
          git push origin gh-pages
